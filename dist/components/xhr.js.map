{"version":3,"sources":["webpack:///./components/xhr.js"],"names":["xin","require","XHR","auto","generateRequest","url","generateUrl","req","method","as","then","body","xhr","fire","error","err","debounce","_requestFlight","debounceDuration","options","toUpperCase","__prepareOptions","Promise","resolve","reject","XMLHttpRequest","doResolve","set","responseBody","doReject","open","async","onload","handleAs","contentType","getResponseHeader","indexOf","status","JSON","parse","responseText","responseXML","response","Error","onerror","send","type","Boolean","value","String","observer","Number","request","Object","notify","Component","define","module","exports"],"mappings":"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","file":"components/xhr.js","sourcesContent":["/* globals XMLHttpRequest */\n\nconst xin = require('../src/');\n\nclass XHR extends xin.Component {\n  get props () {\n    return {\n      auto: {\n        type: Boolean,\n        value: false,\n      },\n\n      method: {\n        type: String,\n        value: 'get',\n      },\n\n      url: {\n        type: String,\n        observer: '_urlChanged',\n      },\n\n      as: {\n        type: String,\n        value: 'intelligent',\n        observer: '_asChanged',\n      },\n\n      debounceDuration: {\n        type: Number,\n        value: 0,\n      },\n\n      request: {\n        type: Object,\n        notify: true,\n      },\n\n      response: {\n        type: Object,\n        notify: true,\n      },\n\n      error: {\n        type: Object,\n        notify: true,\n      },\n    };\n  }\n\n  _urlChanged () {\n    if (this.auto) {\n      this.generateRequest();\n    }\n  }\n\n  _asChanged () {\n    if (this.auto) {\n      this.generateRequest();\n    }\n  }\n\n  _requestFlight () {\n    let url = this.generateUrl();\n    if (!url) {\n      return;\n    }\n\n    return this.req({\n      method: this.method,\n      url: url,\n      as: this.as,\n    }).then(xhr => {\n      let body = xhr.body;\n      this.fire('response', {\n        body: body,\n        xhr: xhr,\n      });\n      return body;\n    }, err => {\n      this.fire('error', {\n        error: err,\n        xhr: err.xhr,\n      });\n      throw err;\n    });\n  }\n\n  generateRequest () {\n    this.debounce('_requestFlight', this._requestFlight, this.debounceDuration);\n  }\n\n  generateUrl () {\n    return this.url;\n  }\n\n  __prepareOptions (options) {\n    options = options || {};\n    options.method = (options.method || 'get').toUpperCase();\n    return options;\n  }\n\n  req (options) {\n    options = this.__prepareOptions(options);\n\n    return new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n      let doResolve = () => {\n        this.set('response', xhr.responseBody);\n        resolve(xhr);\n      };\n      let doReject = err => {\n        this.set('error', err);\n        reject(err);\n      };\n\n      try {\n        xhr.open(options.method, options.url, options.async || true);\n        xhr.onload = () => {\n          var handleAs = options.as;\n          if (handleAs === 'intelligent') {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (contentType.indexOf('json') >= 0) {\n              handleAs = 'json';\n            } else if (contentType.indexOf('html') >= 0) {\n              handleAs = 'html';\n            } else if (contentType.indexOf('xml') >= 0) {\n              handleAs = 'xml';\n            } else {\n              handleAs = 'text';\n            }\n          }\n          if (xhr.status >= 200 && xhr.status < 400) {\n            switch (handleAs) {\n              case 'json':\n                try {\n                  xhr.responseBody = JSON.parse(xhr.responseText);\n                } catch (err) {\n                  return doReject(err);\n                }\n                break;\n              case 'xml':\n                xhr.responseBody = xhr.responseXML;\n                break;\n              default:\n                xhr.responseBody = xhr.response;\n                break;\n            }\n            doResolve();\n          } else {\n            doReject(new Error('Http status ' + xhr.status));\n          }\n        };\n        xhr.onerror = doReject;\n        xhr.send(options.body);\n      } catch (err) {\n        doReject(err);\n      }\n    });\n  }\n}\n\nxin.define('xin-xhr', XHR);\nxin.XHR = XHR;\n\nmodule.exports = XHR;\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/xhr.js\n **/"],"sourceRoot":""}